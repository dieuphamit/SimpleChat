{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/addroom/addroom.component.ts","webpack:///src/app/addroom/addroom.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/chatroom/chatroom.component.ts","webpack:///src/app/chatroom/chatroom.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/roomlist/roomlist.component.ts","webpack:///src/app/roomlist/roomlist.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","MyErrorStateMatcher","control","form","isSubmitted","submitted","invalid","dirty","touched","AddroomComponent","router","route","formBuilder","snackBar","nickname","roomname","ref","matcher","roomForm","group","required","room","orderByChild","equalTo","once","snapshot","exists","open","newRoom","push","set","navigate","onFormSubmit","selector","templateUrl","styleUrls","routes","path","component","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","config","apiKey","databaseURL","AppComponent","title","AppModule","declarations","providers","bootstrap","snapshotToArray","returnArr","forEach","childSnapshot","item","val","key","ChatroomComponent","datepipe","scrolltop","message","users","chats","localStorage","getItem","params","on","resp","setTimeout","chatcontent","nativeElement","scrollHeight","resp2","roomusers","filter","x","status","chatForm","chat","date","transform","Date","type","newMessage","roomuser","user","find","undefined","userRef","update","exitChat","LoginComponent","loginForm","login","setItem","newUser","RoomlistComponent","displayedColumns","rooms","isLoadingResults","newroomuser","newRoomUser","removeItem","logout","environment","production","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as firebase from 'firebase';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-addroom',\r\n  templateUrl: './addroom.component.html',\r\n  styleUrls: ['./addroom.component.css']\r\n})\r\nexport class AddroomComponent implements OnInit {\r\n\r\n  roomForm: FormGroup;\r\n  nickname = '';\r\n  roomname = '';\r\n  ref = firebase.database().ref('rooms/');\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.roomForm = this.formBuilder.group({\r\n      roomname: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  onFormSubmit(form: any) {\r\n    const room = form;\r\n    this.ref.orderByChild('roomname').equalTo(room.roomname).once('value', (snapshot: any) => {\r\n      if (snapshot.exists()) {\r\n        this.snackBar.open('Room name already exist!');\r\n      } else {\r\n        const newRoom = firebase.database().ref('rooms/').push();\r\n        newRoom.set(room);\r\n        this.router.navigate(['/roomlist']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <form class=\"example-form\" [formGroup]=\"roomForm\" (ngSubmit)=\"onFormSubmit(roomForm.value)\">\r\n      <h2>Please enter new Room</h2>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Room Name</mat-label>\r\n        <input matInput placeholder=\"Enter room name\" formControlName=\"roomname\"\r\n                [errorStateMatcher]=\"matcher\">\r\n        <mat-error>\r\n          <span *ngIf=\"!roomForm.get('roomname').valid && roomForm.get('roomname').touched\">Enter room name</span>\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <div class=\"button-row\">\r\n          <button type=\"submit\" [disabled]=\"!roomForm.valid\" mat-fab color=\"primary\"><mat-icon>save</mat-icon></button>\r\n      </div>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddroomComponent } from './addroom/addroom.component';\r\nimport { ChatroomComponent } from './chatroom/chatroom.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RoomlistComponent } from './roomlist/roomlist.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'roomlist', component: RoomlistComponent },\r\n  { path: 'addroom', component: AddroomComponent },\r\n  { path: 'chatroom/:roomname', component: ChatroomComponent },\r\n  { path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import * as firebase from 'firebase';\r\nimport { Component } from '@angular/core';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyDn9YEGAxzLuI-_DpADIQsO80ZWSMLAAls',\r\n  databaseURL: 'https://simplechat-72ed2.firebaseio.com/'\r\n};\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-chat';\r\n\r\n  constructor() {\r\n    firebase.initializeApp(config);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AddroomComponent } from './addroom/addroom.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChatroomComponent } from './chatroom/chatroom.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RoomlistComponent } from './roomlist/roomlist.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RoomlistComponent,\r\n    AddroomComponent,\r\n    ChatroomComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatSortModule,\r\n    MatSnackBarModule,\r\n    MatSidenavModule\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport * as firebase from 'firebase';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\nexport const snapshotToArray = (snapshot: any) => {\r\n  const returnArr = [];\r\n\r\n  snapshot.forEach((childSnapshot: any) => {\r\n    const item = childSnapshot.val();\r\n    item.key = childSnapshot.key;\r\n    returnArr.push(item);\r\n  });\r\n\r\n  return returnArr;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-chatroom',\r\n  templateUrl: './chatroom.component.html',\r\n  styleUrls: ['./chatroom.component.css']\r\n})\r\nexport class ChatroomComponent implements OnInit {\r\n\r\n  @ViewChild('chatcontent') chatcontent: ElementRef;\r\n  scrolltop: number = null;\r\n\r\n  chatForm: FormGroup;\r\n  nickname = '';\r\n  roomname = '';\r\n  message = '';\r\n  users = [];\r\n  chats = [];\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    public datepipe: DatePipe) {\r\n    this.nickname = localStorage.getItem('nickname');\r\n    this.roomname = this.route.snapshot.params.roomname;\r\n    firebase.database().ref('chats/').on('value', resp => {\r\n      this.chats = [];\r\n      this.chats = snapshotToArray(resp);\r\n      setTimeout(() => this.scrolltop = this.chatcontent.nativeElement.scrollHeight, 500);\r\n    });\r\n    firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(this.roomname).on('value', (resp2: any) => {\r\n      const roomusers = snapshotToArray(resp2);\r\n      this.users = roomusers.filter(x => x.status === 'online');\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.chatForm = this.formBuilder.group({\r\n      message : [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  onFormSubmit(form: any) {\r\n    const chat = form;\r\n    chat.roomname = this.roomname;\r\n    chat.nickname = this.nickname;\r\n    chat.date = this.datepipe.transform(new Date(), 'dd/MM/yyyy HH:mm:ss');\r\n    chat.type = 'message';\r\n    const newMessage = firebase.database().ref('chats/').push();\r\n    newMessage.set(chat);\r\n    this.chatForm = this.formBuilder.group({\r\n      message : [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  exitChat() {\r\n    const chat = { roomname: '', nickname: '', message: '', date: '', type: '' };\r\n    chat.roomname = this.roomname;\r\n    chat.nickname = this.nickname;\r\n    chat.date = this.datepipe.transform(new Date(), 'dd/MM/yyyy HH:mm:ss');\r\n    chat.message = ` ${this.nickname} leave the room`;\r\n    chat.type = 'exit';\r\n    const newMessage = firebase.database().ref('chats/').push();\r\n    newMessage.set(chat);\r\n\r\n    firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(this.roomname).on('value', (resp: any) => {\r\n      let roomuser = [];\r\n      roomuser = snapshotToArray(resp);\r\n      const user = roomuser.find(x => x.nickname === this.nickname);\r\n      if (user !== undefined) {\r\n        const userRef = firebase.database().ref('roomusers/' + user.key);\r\n        userRef.update({status: 'offline'});\r\n      }\r\n    });\r\n\r\n    this.router.navigate(['/roomlist']);\r\n  }\r\n\r\n}\r\n","<div class=\"example-container mat-elevation-z8\">\r\n  <mat-drawer-container class=\"drawer-container\">\r\n    <mat-drawer mode=\"side\" opened class=\"left-drawer\">\r\n      <div class=\"users-pane\">\r\n        <mat-card class=\"users-card\">\r\n          <button type=\"button\" mat-button matSuffix mat-icon-button aria-label=\"Exit\" (click)=\"exitChat()\">\r\n            <mat-icon>logout</mat-icon>\r\n          </button>\r\n        </mat-card>\r\n        <mat-card class=\"users-card\" *ngFor=\"let user of users\">\r\n          <mat-icon>person</mat-icon> <span class=\"username\">{{user.nickname}}</span>\r\n        </mat-card>\r\n      </div>\r\n    </mat-drawer>\r\n    <mat-drawer-content class=\"chat-pane\">\r\n      <div #chatcontent [scrollTop]=\"scrolltop\" class=\"chat-content\">\r\n        <div class=\"message-box\" *ngFor=\"let chat of chats\">\r\n          <div class=\"chat-status\" text-center *ngIf=\"chat.type==='join'||chat.type==='exit';else message\">\r\n            <span class=\"chat-date\">{{chat.date | date:'yyyy/MM/dd HH:mm:ss'}}&nbsp;</span>\r\n            <span class=\"chat-content-center\">{{chat.message}}</span>\r\n          </div>\r\n          <ng-template #message>\r\n            <div class=\"chat-message\">\r\n              <div class=\"right-bubble\" [ngClass]=\"{'right-bubble': chat.nickname === nickname, 'left-bubble': chat.nickname !== nickname}\">\r\n                <span class=\"msg-name\" *ngIf=\"chat.nickname === nickname\">Me</span>\r\n                <span class=\"msg-name\" *ngIf=\"chat.nickname !== nickname\">{{chat.nickname}}</span>\r\n                <span class=\"msg-date\"> at {{chat.date | date:'yyyy/MM/dd HH:mm:ss'}}</span>\r\n                <p text-wrap>{{chat.message}}</p>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n      <footer class=\"sticky-footer\">\r\n        <form class=\"message-form\" [formGroup]=\"chatForm\" (ngSubmit)=\"onFormSubmit(chatForm.value)\">\r\n          <mat-form-field class=\"message-form-field\">\r\n            <input matInput placeholder=\"Enter message here\" formControlName=\"message\"\r\n                    [errorStateMatcher]=\"matcher\">\r\n            <mat-error>\r\n              <span *ngIf=\"!chatForm.get('message').valid && chatForm.get('message').touched\">Enter your message</span>\r\n            </mat-error>\r\n            <button type=\"submit\" [disabled]=\"!chatForm.valid\" mat-button matSuffix mat-icon-button aria-label=\"Send\">\r\n              <mat-icon>send</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n        </form>\r\n      </footer>\r\n    </mat-drawer-content>\r\n  </mat-drawer-container>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { Router } from '@angular/router';\r\nimport * as firebase from 'firebase/app';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  nickname = '';\r\n  ref = firebase.database().ref('users/');\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (localStorage.getItem('nickname')) {\r\n      this.router.navigate(['/roomlist']);\r\n    }\r\n    this.loginForm = this.formBuilder.group({\r\n      nickname : [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  onFormSubmit(form: any) {\r\n    const login = form;\r\n    this.ref.orderByChild('nickname').equalTo(login.nickname).once('value', snapshot => {\r\n      if (snapshot.exists()) {\r\n        localStorage.setItem('nickname', login.nickname);\r\n        this.router.navigate(['/roomlist']);\r\n      } else {\r\n        const newUser = firebase.database().ref('users/').push();\r\n        newUser.set(login);\r\n        localStorage.setItem('nickname', login.nickname);\r\n        this.router.navigate(['/roomlist']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <form class=\"example-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onFormSubmit(loginForm.value)\">\r\n      <h2>Please login using your nickname</h2>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Nickname</mat-label>\r\n        <input matInput placeholder=\"Enter your nickname\" formControlName=\"nickname\"\r\n                [errorStateMatcher]=\"matcher\">\r\n        <mat-error>\r\n          <span *ngIf=\"!loginForm.get('nickname').valid && loginForm.get('nickname').touched\">Please enter your nickname</span>\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <div class=\"button-row\">\r\n          <button type=\"submit\" [disabled]=\"!loginForm.valid\" mat-fab color=\"primary\"><mat-icon>login</mat-icon></button>\r\n      </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as firebase from 'firebase/app';\r\nimport { DatePipe } from '@angular/common';\r\nimport 'firebase/database';\r\n\r\nexport const snapshotToArray = (snapshot: any) => {\r\n  const returnArr = [];\r\n\r\n  snapshot.forEach((childSnapshot: any) => {\r\n    const item = childSnapshot.val();\r\n    item.key = childSnapshot.key;\r\n    returnArr.push(item);\r\n  });\r\n\r\n  return returnArr;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-roomlist',\r\n  templateUrl: './roomlist.component.html',\r\n  styleUrls: ['./roomlist.component.css']\r\n})\r\nexport class RoomlistComponent implements OnInit {\r\n\r\n  nickname = '';\r\n  displayedColumns: string[] = ['roomname'];\r\n  rooms = [];\r\n  isLoadingResults = true;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public datepipe: DatePipe) {\r\n\r\n    this.nickname = localStorage.getItem('nickname');\r\n    firebase.database().ref('rooms/').on('value', resp => {\r\n      this.rooms = [];\r\n      this.rooms = snapshotToArray(resp);\r\n      this.isLoadingResults = false;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  enterChatRoom(roomname: string) {\r\n    const chat = { roomname: '', nickname: '', message: '', date: '', type: '' };\r\n    chat.roomname = roomname;\r\n    chat.nickname = this.nickname;\r\n    chat.date = this.datepipe.transform(new Date(), 'dd/MM/yyyy HH:mm:ss');\r\n    chat.message = ` ${this.nickname} enter the room`;\r\n    chat.type = 'join';\r\n    const newMessage = firebase.database().ref('chats/').push();\r\n    newMessage.set(chat);\r\n\r\n    firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(roomname).on('value', (resp: any) => {\r\n      let roomuser = [];\r\n      roomuser = snapshotToArray(resp);\r\n      const user = roomuser.find(x => x.nickname === this.nickname);\r\n      if (user !== undefined) {\r\n        const userRef = firebase.database().ref('roomusers/' + user.key);\r\n        userRef.update({status: 'online'});\r\n      } else {\r\n        const newroomuser = { roomname: '', nickname: '', status: '' };\r\n        newroomuser.roomname = roomname;\r\n        newroomuser.nickname = this.nickname;\r\n        newroomuser.status = 'online';\r\n        const newRoomUser = firebase.database().ref('roomusers/').push();\r\n        newRoomUser.set(newroomuser);\r\n      }\r\n    });\r\n\r\n    this.router.navigate(['/chatroom', roomname]);\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('nickname');\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n","<div class=\"example-container mat-elevation-z8\">\r\n  <h3>{{nickname}} <button mat-flat-button (click)=\"logout()\"><mat-icon>logout</mat-icon></button></h3>\r\n  <h2>Room List</h2>\r\n  <div class=\"example-loading-shade\"\r\n       *ngIf=\"isLoadingResults\">\r\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\r\n  </div>\r\n  <div class=\"button-row\">\r\n    <button mat-flat-button color=\"primary\" [routerLink]=\"['/addroom']\"><mat-icon>add</mat-icon></button>\r\n  </div>\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"rooms\" class=\"example-table\"\r\n           matSort matSortActive=\"roomname\" matSortDisableClear matSortDirection=\"asc\">\r\n\r\n      <!-- Room Name Column -->\r\n      <ng-container matColumnDef=\"roomname\">\r\n        <th mat-header-cell *matHeaderCellDef>Room Name</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.roomname}}</td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"enterChatRoom(row.roomname)\"></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}