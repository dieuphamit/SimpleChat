{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/addroom/addroom.component.ts","./src/app/addroom/addroom.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chatroom/chatroom.component.ts","./src/app/chatroom/chatroom.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/roomlist/roomlist.component.ts","./src/app/roomlist/roomlist.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as firebase from 'firebase';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-addroom',\r\n  templateUrl: './addroom.component.html',\r\n  styleUrls: ['./addroom.component.css']\r\n})\r\nexport class AddroomComponent implements OnInit {\r\n\r\n  roomForm: FormGroup;\r\n  nickname = '';\r\n  roomname = '';\r\n  ref = firebase.database().ref('rooms/');\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    this.roomForm = this.formBuilder.group({\r\n      roomname: [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  onFormSubmit(form: any) {\r\n    const room = form;\r\n    this.ref.orderByChild('roomname').equalTo(room.roomname).once('value', (snapshot: any) => {\r\n      if (snapshot.exists()) {\r\n        this.snackBar.open('Room name already exist!');\r\n      } else {\r\n        const newRoom = firebase.database().ref('rooms/').push();\r\n        newRoom.set(room);\r\n        this.router.navigate(['/roomlist']);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n  <form class=\"example-form\" [formGroup]=\"roomForm\" (ngSubmit)=\"onFormSubmit(roomForm.value)\">\r\n      <h2>Please enter new Room</h2>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Room Name</mat-label>\r\n        <input matInput placeholder=\"Enter room name\" formControlName=\"roomname\"\r\n                [errorStateMatcher]=\"matcher\">\r\n        <mat-error>\r\n          <span *ngIf=\"!roomForm.get('roomname').valid && roomForm.get('roomname').touched\">Enter room name</span>\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <div class=\"button-row\">\r\n          <button type=\"submit\" [disabled]=\"!roomForm.valid\" mat-fab color=\"primary\"><mat-icon>save</mat-icon></button>\r\n      </div>\r\n  </form>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddroomComponent } from './addroom/addroom.component';\r\nimport { ChatroomComponent } from './chatroom/chatroom.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RoomlistComponent } from './roomlist/roomlist.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'roomlist', component: RoomlistComponent },\r\n  { path: 'addroom', component: AddroomComponent },\r\n  { path: 'chatroom/:roomname', component: ChatroomComponent },\r\n  { path: '',\r\n    redirectTo: '/login',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import * as firebase from 'firebase';\r\nimport { Component } from '@angular/core';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyDn9YEGAxzLuI-_DpADIQsO80ZWSMLAAls',\r\n  databaseURL: 'https://simplechat-72ed2.firebaseio.com/'\r\n};\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'angular-chat';\r\n\r\n  constructor() {\r\n    firebase.initializeApp(config);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n","import { DatePipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AddroomComponent } from './addroom/addroom.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChatroomComponent } from './chatroom/chatroom.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RoomlistComponent } from './roomlist/roomlist.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    RoomlistComponent,\r\n    AddroomComponent,\r\n    ChatroomComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatFormFieldModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatSortModule,\r\n    MatSnackBarModule,\r\n    MatSidenavModule\r\n  ],\r\n  providers: [DatePipe],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { FormControl, FormGroupDirective, FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport * as firebase from 'firebase';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\nexport const snapshotToArray = (snapshot: any) => {\r\n  const returnArr = [];\r\n\r\n  snapshot.forEach((childSnapshot: any) => {\r\n    const item = childSnapshot.val();\r\n    item.key = childSnapshot.key;\r\n    returnArr.push(item);\r\n  });\r\n\r\n  return returnArr;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-chatroom',\r\n  templateUrl: './chatroom.component.html',\r\n  styleUrls: ['./chatroom.component.css']\r\n})\r\nexport class ChatroomComponent implements OnInit {\r\n\r\n  @ViewChild('chatcontent') chatcontent: ElementRef;\r\n  scrolltop: number = null;\r\n\r\n  chatForm: FormGroup;\r\n  nickname = '';\r\n  roomname = '';\r\n  message = '';\r\n  users = [];\r\n  chats = [];\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private formBuilder: FormBuilder,\r\n    public datepipe: DatePipe) {\r\n    this.nickname = localStorage.getItem('nickname');\r\n    this.roomname = this.route.snapshot.params.roomname;\r\n    firebase.database().ref('chats/').on('value', resp => {\r\n      this.chats = [];\r\n      this.chats = snapshotToArray(resp);\r\n      setTimeout(() => this.scrolltop = this.chatcontent.nativeElement.scrollHeight, 500);\r\n    });\r\n    firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(this.roomname).on('value', (resp2: any) => {\r\n      const roomusers = snapshotToArray(resp2);\r\n      this.users = roomusers.filter(x => x.status === 'online');\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.chatForm = this.formBuilder.group({\r\n      message : [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  onFormSubmit(form: any) {\r\n    const chat = form;\r\n    chat.roomname = this.roomname;\r\n    chat.nickname = this.nickname;\r\n    chat.date = this.datepipe.transform(new Date(), 'dd/MM/yyyy HH:mm:ss');\r\n    chat.type = 'message';\r\n    const newMessage = firebase.database().ref('chats/').push();\r\n    newMessage.set(chat);\r\n    this.chatForm = this.formBuilder.group({\r\n      message : [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  exitChat() {\r\n    const chat = { roomname: '', nickname: '', message: '', date: '', type: '' };\r\n    chat.roomname = this.roomname;\r\n    chat.nickname = this.nickname;\r\n    chat.date = this.datepipe.transform(new Date(), 'dd/MM/yyyy HH:mm:ss');\r\n    chat.message = ` ${this.nickname} leave the room`;\r\n    chat.type = 'exit';\r\n    const newMessage = firebase.database().ref('chats/').push();\r\n    newMessage.set(chat);\r\n\r\n    firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(this.roomname).on('value', (resp: any) => {\r\n      let roomuser = [];\r\n      roomuser = snapshotToArray(resp);\r\n      const user = roomuser.find(x => x.nickname === this.nickname);\r\n      if (user !== undefined) {\r\n        const userRef = firebase.database().ref('roomusers/' + user.key);\r\n        userRef.update({status: 'offline'});\r\n      }\r\n    });\r\n\r\n    this.router.navigate(['/roomlist']);\r\n  }\r\n\r\n}\r\n","<div class=\"example-container mat-elevation-z8\">\r\n  <mat-drawer-container class=\"drawer-container\">\r\n    <mat-drawer mode=\"side\" opened class=\"left-drawer\">\r\n      <div class=\"users-pane\">\r\n        <mat-card class=\"users-card\">\r\n          <button type=\"button\" mat-button matSuffix mat-icon-button aria-label=\"Exit\" (click)=\"exitChat()\">\r\n            <mat-icon>logout</mat-icon>\r\n          </button>\r\n        </mat-card>\r\n        <mat-card class=\"users-card\" *ngFor=\"let user of users\">\r\n          <mat-icon>person</mat-icon> <span class=\"username\">{{user.nickname}}</span>\r\n        </mat-card>\r\n      </div>\r\n    </mat-drawer>\r\n    <mat-drawer-content class=\"chat-pane\">\r\n      <div #chatcontent [scrollTop]=\"scrolltop\" class=\"chat-content\">\r\n        <div class=\"message-box\" *ngFor=\"let chat of chats\">\r\n          <div class=\"chat-status\" text-center *ngIf=\"chat.type==='join'||chat.type==='exit';else message\">\r\n            <span class=\"chat-date\">{{chat.date | date:'yyyy/MM/dd HH:mm:ss'}}&nbsp;</span>\r\n            <span class=\"chat-content-center\">{{chat.message}}</span>\r\n          </div>\r\n          <ng-template #message>\r\n            <div class=\"chat-message\">\r\n              <div class=\"right-bubble\" [ngClass]=\"{'right-bubble': chat.nickname === nickname, 'left-bubble': chat.nickname !== nickname}\">\r\n                <span class=\"msg-name\" *ngIf=\"chat.nickname === nickname\">Me</span>\r\n                <span class=\"msg-name\" *ngIf=\"chat.nickname !== nickname\">{{chat.nickname}}</span>\r\n                <span class=\"msg-date\"> at {{chat.date | date:'yyyy/MM/dd HH:mm:ss'}}</span>\r\n                <p text-wrap>{{chat.message}}</p>\r\n              </div>\r\n            </div>\r\n          </ng-template>\r\n        </div>\r\n      </div>\r\n      <footer class=\"sticky-footer\">\r\n        <form class=\"message-form\" [formGroup]=\"chatForm\" (ngSubmit)=\"onFormSubmit(chatForm.value)\">\r\n          <mat-form-field class=\"message-form-field\">\r\n            <input matInput placeholder=\"Enter message here\" formControlName=\"message\"\r\n                    [errorStateMatcher]=\"matcher\">\r\n            <mat-error>\r\n              <span *ngIf=\"!chatForm.get('message').valid && chatForm.get('message').touched\">Enter your message</span>\r\n            </mat-error>\r\n            <button type=\"submit\" [disabled]=\"!chatForm.valid\" mat-button matSuffix mat-icon-button aria-label=\"Send\">\r\n              <mat-icon>send</mat-icon>\r\n            </button>\r\n          </mat-form-field>\r\n        </form>\r\n      </footer>\r\n    </mat-drawer-content>\r\n  </mat-drawer-container>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, FormGroupDirective, NgForm, Validators } from '@angular/forms';\r\nimport { ErrorStateMatcher } from '@angular/material/core';\r\nimport { Router } from '@angular/router';\r\nimport * as firebase from 'firebase/app';\r\n\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  nickname = '';\r\n  ref = firebase.database().ref('users/');\r\n  matcher = new MyErrorStateMatcher();\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private formBuilder: FormBuilder\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (localStorage.getItem('nickname')) {\r\n      this.router.navigate(['/roomlist']);\r\n    }\r\n    this.loginForm = this.formBuilder.group({\r\n      nickname : [null, Validators.required]\r\n    });\r\n  }\r\n\r\n  onFormSubmit(form: any) {\r\n    const login = form;\r\n    this.ref.orderByChild('nickname').equalTo(login.nickname).once('value', snapshot => {\r\n      if (snapshot.exists()) {\r\n        localStorage.setItem('nickname', login.nickname);\r\n        this.router.navigate(['/roomlist']);\r\n      } else {\r\n        const newUser = firebase.database().ref('users/').push();\r\n        newUser.set(login);\r\n        localStorage.setItem('nickname', login.nickname);\r\n        this.router.navigate(['/roomlist']);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <form class=\"example-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onFormSubmit(loginForm.value)\">\r\n      <h2>Please login using your nickname</h2>\r\n      <mat-form-field class=\"example-full-width\">\r\n        <mat-label>Nickname</mat-label>\r\n        <input matInput placeholder=\"Enter your nickname\" formControlName=\"nickname\"\r\n                [errorStateMatcher]=\"matcher\">\r\n        <mat-error>\r\n          <span *ngIf=\"!loginForm.get('nickname').valid && loginForm.get('nickname').touched\">Please enter your nickname</span>\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <div class=\"button-row\">\r\n          <button type=\"submit\" [disabled]=\"!loginForm.valid\" mat-fab color=\"primary\"><mat-icon>login</mat-icon></button>\r\n      </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport * as firebase from 'firebase/app';\r\nimport { DatePipe } from '@angular/common';\r\nimport 'firebase/database';\r\n\r\nexport const snapshotToArray = (snapshot: any) => {\r\n  const returnArr = [];\r\n\r\n  snapshot.forEach((childSnapshot: any) => {\r\n    const item = childSnapshot.val();\r\n    item.key = childSnapshot.key;\r\n    returnArr.push(item);\r\n  });\r\n\r\n  return returnArr;\r\n};\r\n\r\n@Component({\r\n  selector: 'app-roomlist',\r\n  templateUrl: './roomlist.component.html',\r\n  styleUrls: ['./roomlist.component.css']\r\n})\r\nexport class RoomlistComponent implements OnInit {\r\n\r\n  nickname = '';\r\n  displayedColumns: string[] = ['roomname'];\r\n  rooms = [];\r\n  isLoadingResults = true;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    public datepipe: DatePipe) {\r\n\r\n    this.nickname = localStorage.getItem('nickname');\r\n    firebase.database().ref('rooms/').on('value', resp => {\r\n      this.rooms = [];\r\n      this.rooms = snapshotToArray(resp);\r\n      this.isLoadingResults = false;\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  enterChatRoom(roomname: string) {\r\n    const chat = { roomname: '', nickname: '', message: '', date: '', type: '' };\r\n    chat.roomname = roomname;\r\n    chat.nickname = this.nickname;\r\n    chat.date = this.datepipe.transform(new Date(), 'dd/MM/yyyy HH:mm:ss');\r\n    chat.message = ` ${this.nickname} enter the room`;\r\n    chat.type = 'join';\r\n    const newMessage = firebase.database().ref('chats/').push();\r\n    newMessage.set(chat);\r\n\r\n    firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(roomname).on('value', (resp: any) => {\r\n      let roomuser = [];\r\n      roomuser = snapshotToArray(resp);\r\n      const user = roomuser.find(x => x.nickname === this.nickname);\r\n      if (user !== undefined) {\r\n        const userRef = firebase.database().ref('roomusers/' + user.key);\r\n        userRef.update({status: 'online'});\r\n      } else {\r\n        const newroomuser = { roomname: '', nickname: '', status: '' };\r\n        newroomuser.roomname = roomname;\r\n        newroomuser.nickname = this.nickname;\r\n        newroomuser.status = 'online';\r\n        const newRoomUser = firebase.database().ref('roomusers/').push();\r\n        newRoomUser.set(newroomuser);\r\n      }\r\n    });\r\n\r\n    this.router.navigate(['/chatroom', roomname]);\r\n  }\r\n\r\n  logout(): void {\r\n    localStorage.removeItem('nickname');\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n}\r\n","<div class=\"example-container mat-elevation-z8\">\r\n  <h3>{{nickname}} <button mat-flat-button (click)=\"logout()\"><mat-icon>logout</mat-icon></button></h3>\r\n  <h2>Room List</h2>\r\n  <div class=\"example-loading-shade\"\r\n       *ngIf=\"isLoadingResults\">\r\n    <mat-spinner *ngIf=\"isLoadingResults\"></mat-spinner>\r\n  </div>\r\n  <div class=\"button-row\">\r\n    <button mat-flat-button color=\"primary\" [routerLink]=\"['/addroom']\"><mat-icon>add</mat-icon></button>\r\n  </div>\r\n  <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"rooms\" class=\"example-table\"\r\n           matSort matSortActive=\"roomname\" matSortDisableClear matSortDirection=\"asc\">\r\n\r\n      <!-- Room Name Column -->\r\n      <ng-container matColumnDef=\"roomname\">\r\n        <th mat-header-cell *matHeaderCellDef>Room Name</th>\r\n        <td mat-cell *matCellDef=\"let row\">{{row.roomname}}</td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"enterChatRoom(row.roomname)\"></tr>\r\n    </table>\r\n  </div>\r\n</div>\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}